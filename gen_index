#!/bin/bash

# Script to generate blog index page

extract_metadata() {
  local markdown_file="$1"

  if [ ! -f "$markdown_file" ]; then
    echo "File not found: $markdown_file"
    return 1
  fi

  # extract the metadata between the first two '---' occurrences
  awk -v RS='' '/^---\n/ && /\n---$/ {print; exit}' "$markdown_file" | sed '1d;$d'
}

process_blog_posts() {
  local -A posts_by_date  # hashmap

  # Find all markdown files in src/blog/*/
  readarray -d '' pages_found < <(find "src/blog" -mindepth 2 -maxdepth 2 -type f -name "*.md" -print0)
  pages+=("${pages_found[@]}")

  # Loop through the found markdown files
  for page in "${pages[@]}"; do
    metadata=$(extract_metadata "$page")

    if [ -n "$metadata" ]; then
      date=$(echo "$metadata" | grep -oP 'date:\s*\K.+')
      if [ -n "$date" ]; then
        # Use the file path as the key and date as the value in the hashmap
        posts_by_date["$page"]="$date"
      fi
    fi
  done

    # Sort the associative array by date (newest first)
    sorted_dates=($(for date in "${posts_by_date[@]}"; do echo "$date"; done | sort -r))

    num_entries=${#pages_found[@]}
    echo "---"
    echo "title: Latest posts"
    echo "---"
    echo ""

    # Loop through the sorted dates and print metadata accordingly
    for date in "${sorted_dates[@]}"; do
      for page in "${!posts_by_date[@]}"; do
        if [ "${posts_by_date[$page]}" = "$date" ]; then
          metadata=$(extract_metadata "$page")
          title=$(echo "$metadata" | grep -E 'title' | sed 's/title: //')
          date=$(echo "$metadata" | grep -E 'date' | sed 's/date: //')

          page=${page#src/blog/} # strip src/blog prefix
          page=${page%/index.md}

          echo "- $date - [${title}](${page})"
        fi
      done
    done
}

if [ -d src/blog/index.md ]; then
  rm src/blog/index.md
fi

process_blog_posts
